@inherits FluxorComponent
@inject IState<MediaState> MediaState

<div class="media-card-section">
    @foreach (var media in MediaState.Value.Medias
    .Where(m => SearchWord != null
    && m.title != null
    && m.title.ToLower().Contains(SearchWord.ToLower())
    && (m.category == MovieCategory || m.category == TvCategory)
    && (m.isBookmarked == IsBookmarked || m.isBookmarked == NotBookmarked)))
    {
        <div class="media-card">
            @if (media.isBookmarked)
            {
                <div @onclick="() => AddToBookMarked(media)" class="bookmarked-img-container">
                    <img src="Assets/icon-bookmark-full.svg" />
                </div>
            }
            else
            {
                <div @onclick="() => AddToBookMarked(media)" class="bookmarked-img-container">
                    <img src="Assets/icon-bookmark-empty.svg" />
                </div>

            }
            <div class="media-img-container">
                <img class="media-img" src="@media.thumbnail.regular.large" alt="media-img" loading="lazy" />
                <a class="movie-link" href="https://www.youtube.com/watch?v=KAOdjqyG37A" target="_blank">
                    <div class="play-container">
                        <div class="play">
                            <img src="Assets/icon-play.svg" alt="" />
                            <p>Play</p>
                        </div>
                    </div>
                </a>

            </div>
            <div class="media-info">
                <div class="media-year">
                    <p>@media.year</p>
                    <span class="dot"></span>
                    @if (media.category == "Movie")
                    {
                        <img src="Assets/icon-category-movie.svg" />
                        <p>Movie</p>
                    }
                    else
                    {
                        <img src="Assets/icon-category-tv.svg" />
                        <p>TV Serie</p>
                    }
                    <span class="dot"></span>
                    <p>@media.rating</p>
                </div>

                <div class="media-title">
                    <p>@media.title</p>
                </div>
            </div>
        </div>
    }
</div>

<ToastComponent Active="@_activeCssClass" ToastMessage="@_toastMessage" Icon="@_icon" />


@code {
    [Parameter]
    public string? SearchWord { get; set; }

    [Parameter]
    public string? MovieCategory { get; set; }

    [Parameter]
    public string? TvCategory { get; set; }

    [Parameter]
    public bool? IsBookmarked { get; set; } = true;

    [Parameter]
    public bool? NotBookmarked { get; set; } = false;

    private string? _toastMessage = "";
    private string? _activeCssClass = "";
    private string? _icon = "";

    private async Task AddToBookMarked(Media bookMedia)
    {
        bookMedia.isBookmarked = !bookMedia.isBookmarked;

        if (bookMedia.isBookmarked)
        {
            if (_activeCssClass == "added")
            {
                _activeCssClass = "";
                await Task.Delay(1);
            }
            _activeCssClass = "added";
            _icon = "fa-light fa-circle-plus";
            _toastMessage = "Added to";

        }
        else
        {
            if (_activeCssClass == "removed")
            {
                _activeCssClass = "";
                await Task.Delay(1);
            }
            _activeCssClass = "removed";
            _icon = "fa-light fa-circle-minus";
            _toastMessage = "Removed from";
        }
    }
}