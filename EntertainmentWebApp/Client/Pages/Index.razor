@page "/"
@inherits FluxorComponent
@inject IState<MediaState> MediaState
@inject StateFacade Facade

<div class="search-component">
    <img class="search-icon" src="Assets/icon-search.svg" alt="search" />
    <input class="input-field" type="text" placeholder="Search for movies or TV series"
           @bind-value="_searchWord" @bind-value:event="oninput" />
</div>

@if (MediaState.Value.IsLoading)
{
    <p class="loading-media">Media is loading...</p>
}
else
{
    @if (_searchWord == string.Empty)
    {
        <TrendingMediaComponent SearchWord="@_searchWord" Heading="Trending" />

        if (!(MediaState.Value.Medias is null) && MediaState.Value.Medias.Any())
        {
            <MediaComponent Heading="Recommended for you" SearchWord="@_searchWord" MovieCategory="Movie" TvCategory="TV Series" IsTrending="false"/>
        }
    }
    else
    {
        <h2 class="recommended">
            Found
            <span>@MediaState.Value.Medias.Count(m => m.title.ToLowerInvariant().Contains(_searchWord.ToLowerInvariant())) results for ‘@_searchWord’</span>
        </h2>

        <div class="search-result">
            <SearchResultComponent SearchWord="@_searchWord" MovieCategory="Movie" TvCategory="TV Series"/>
        </div>
    }
}


@code
{
    private string _searchWord = "";

    protected override void OnInitialized()
    {
        if (MediaState.Value.Medias is null)
        {
            Facade.LoadMedia();
        }

        base.OnInitialized();
    }
}

