@page "/"
@inherits FluxorComponent
@inject IState<MediaState> MediaState
@inject StateFacade Facade

<div class="search-component">
    <img class="search-icon" src="Assets/icon-search.svg" alt="" />
    <input class="input-field" type="text" placeholder="Search for movies or TV series"
           @bind-value="_searchWord" @bind-value:event="oninput" />
</div>

@if (_searchWord == string.Empty)
{
    <h2 class="trending">Trending</h2>

    <TrendingMediaComponent SearchWord="@_searchWord" />

    <h2 class="recommended">Recommended for you</h2>

    @if (MediaState.Value.IsLoading)
    {
    }

    else if (MediaState.Value.HasCurrentErrors)
    {
        <p>Whoops! Looks like an issue occurred loading media :(</p>
    }
    else if (!(MediaState.Value.Medias is null) && MediaState.Value.Medias.Any())
    {
        <MediaComponent SearchWord="@_searchWord" MovieCategory="Movie" TvCategory="TV Series" />
    }
}
else
{
    <h2 class="recommended">
        Found
        <span>@MediaState.Value.Medias.Count(m => m.title.ToLowerInvariant().Contains(_searchWord.ToLowerInvariant())) results for ‘@_searchWord’</span>
    </h2>
    <div class="trending-search-result">
        <TrendingMediaComponent SearchWord="@_searchWord" />
    </div>
    <div class="search-result">
        <MediaComponent SearchWord="@_searchWord" MovieCategory="Movie" TvCategory="TV Series" />
    </div>

}


@code
{
    private string _searchWord = "";

    protected override void OnInitialized()
    {
        if (MediaState.Value.Medias is null)
        {
            Facade.LoadMedia();
        }

        base.OnInitialized();
    }
}

