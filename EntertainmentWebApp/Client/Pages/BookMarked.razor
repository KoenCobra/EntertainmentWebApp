@page "/bookmarked"
@inherits FluxorComponent
@inject IState<MediaState> MediaState

<div class="search-component">
    <img class="search-icon" src="Assets/icon-search.svg" alt="search" />
    <input class="input-field" type="text" placeholder="Search for bookmarked shows"
           @bind-value="SearchWord" @bind-value:event="oninput" />
</div>

@if (SearchWord == string.Empty)
{
    <h2 class="movies">Bookmarked Movies</h2>
    <div class="search-result">
        <MediaComponent SearchWord="@SearchWord" MovieCategory="Movie" TvCategory="null" IsBookmarked="true" NotBookmarked="true"/>
    </div>

    <h2 class="movies">Bookmarked TV Series</h2>
    <div class="search-result">
        <MediaComponent SearchWord="@SearchWord" MovieCategory="null" TvCategory="TV Series" IsBookmarked="true" NotBookmarked="true" />
    </div>
}
else
{
    <h2 class="recommended">
        Found
        <span>@MediaState.Value.Medias.Count(m => m.title.ToLowerInvariant().Contains(SearchWord.ToLowerInvariant()) && m.isTrending == false && m.isBookmarked) results for ‘@SearchWord’</span>
    </h2>
    <div class="search-result">
        <MediaComponent SearchWord="@SearchWord" MovieCategory="Movie" TvCategory="null" IsBookmarked="true" NotBookmarked="true" />
    </div>

    <div class="search-result">
        <MediaComponent SearchWord="@SearchWord" MovieCategory="null" TvCategory="TV Series" IsBookmarked="true" NotBookmarked="true" />
    </div>
}
@code {
    private string? SearchWord { get; set; } = string.Empty;
}
